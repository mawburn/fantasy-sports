# Pre-commit hooks for code quality and formatting
# Run manually: pre-commit run --all-files
# Install hooks: pre-commit install

repos:
  # Ruff - Fast Python linter and formatter written in Rust
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.0
    hooks:
      - id: ruff
        name: Ruff linter
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: Ruff formatter

  # Black - Python code formatter (backup to Ruff for consistency)
  - repo: https://github.com/psf/black
    rev: 24.2.0
    hooks:
      - id: black

  # isort - Python import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # mypy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          [types-requests, types-python-dateutil, pandas-stubs]
        args: [--ignore-missing-imports]

  # mdformat - Markdown formatting
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter
          - mdformat-tables
        args: ["--wrap", "100"]

  # yamllint - YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

  # prettier - Format JSON, YAML, and other files
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [json, yaml]
        files: \.(json|ya?ml)$
        args: ["--tab-width", "2"]

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ["-ll", "--skip", "B101,B601"]
        exclude: tests/

  # Spell checking
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args:
          [
            "--skip=*.json,*.csv,*.xml,*.svg,*.lock",
            "--ignore-words-list=nd,reacher,theis,tha,nam",
          ]

  # Jupyter notebook cleaning
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        name: Strip Jupyter notebook outputs

  # License header check (optional)
  # - repo: https://github.com/Lucas-C/pre-commit-hooks
  #   rev: v1.5.4
  #   hooks:
  #     - id: insert-license
  #       files: \.py$
  #       args: [--license-filepath, LICENSE_HEADER.txt]

# Configuration for ci
ci:
  autofix_prs: true
  autofix_commit_msg: "style: auto-fix with pre-commit hooks"
  autoupdate_commit_msg: "chore: update pre-commit hooks"
  autoupdate_schedule: weekly
  skip: [mypy] # Skip mypy in CI as it can be slow
